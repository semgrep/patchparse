type token =
  | IDENT of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | CST_CHAR of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | CST_INT of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | CST_STRING of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | SEP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | ESEP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | OPERATOR of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | EQ of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | SYMOP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | DEREFOP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | TYPE of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | PRIM of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | INCLUDE of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | EOF
  | LPAREN of (int * Parse_error.linetype * Parse_error.atfront)
  | RPAREN of (int * Parse_error.linetype * Parse_error.atfront)
  | LBRACE of (int * Parse_error.linetype * Parse_error.atfront)
  | RBRACE of (int * Parse_error.linetype * Parse_error.atfront)
  | LBRACK of (int * Parse_error.linetype * Parse_error.atfront)
  | RBRACK of (int * Parse_error.linetype * Parse_error.atfront)
  | DEFINE of (int * Parse_error.linetype * Parse_error.atfront)

open Parsing;;
# 6 "cparser2.mly"
open Parse_error

let parse_error _ =
  display_error "Syntax error"
    (Parsing.symbol_start ()) (Parsing.symbol_end ())

let mkinfo (s,(ln,ty,tag)) = (s,(ln,ty))
let mkbinfo (ln,ty,tag)    = (ln,ty)

let mkcall fn arg known =
  let atfront (_,(_,_,tag)) = tag = FRONT in
  if atfront fn
  then Ast0.DECLARER(mkinfo fn,arg,known)
  else Ast0.CALL(mkinfo fn,arg,known)

# 42 "cparser2.ml"
let yytransl_const = [|
    0 (* EOF *);
    0|]

let yytransl_block = [|
  257 (* IDENT *);
  258 (* CST_CHAR *);
  259 (* CST_INT *);
  260 (* CST_STRING *);
  261 (* SEP *);
  262 (* ESEP *);
  263 (* OPERATOR *);
  264 (* EQ *);
  265 (* SYMOP *);
  266 (* DEREFOP *);
  267 (* TYPE *);
  268 (* PRIM *);
  269 (* INCLUDE *);
  270 (* LPAREN *);
  271 (* RPAREN *);
  272 (* LBRACE *);
  273 (* RBRACE *);
  274 (* LBRACK *);
  275 (* RBRACK *);
  276 (* DEFINE *);
    0|]

let yylhs = "\255\255\
\001\000\001\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\005\000\005\000\005\000\005\000\005\000\
\005\000\006\000\008\000\010\000\010\000\010\000\010\000\003\000\
\003\000\003\000\003\000\003\000\009\000\009\000\009\000\009\000\
\009\000\015\000\015\000\015\000\019\000\019\000\019\000\017\000\
\017\000\017\000\021\000\021\000\021\000\018\000\018\000\018\000\
\018\000\018\000\018\000\018\000\018\000\018\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\011\000\011\000\011\000\011\000\011\000\011\000\
\011\000\011\000\011\000\011\000\011\000\012\000\012\000\012\000\
\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
\012\000\012\000\013\000\013\000\013\000\013\000\026\000\026\000\
\025\000\025\000\025\000\025\000\027\000\027\000\027\000\023\000\
\023\000\023\000\023\000\023\000\023\000\024\000\024\000\024\000\
\024\000\024\000\024\000\024\000\014\000\014\000\014\000\014\000\
\014\000\014\000\020\000\020\000\020\000\020\000\020\000\020\000\
\020\000\020\000\028\000\028\000\028\000\028\000\028\000\028\000\
\016\000\016\000\000\000"

let yylen = "\002\000\
\002\000\001\000\002\000\002\000\002\000\002\000\001\000\001\000\
\001\000\002\000\001\000\002\000\001\000\002\000\002\000\001\000\
\002\000\001\000\002\000\001\000\002\000\001\000\002\000\002\000\
\001\000\002\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\002\000\005\000\002\000\001\000\005\000\004\000\002\000\
\001\000\002\000\001\000\001\000\002\000\001\000\002\000\001\000\
\001\000\002\000\001\000\001\000\002\000\001\000\001\000\002\000\
\001\000\001\000\002\000\001\000\001\000\004\000\002\000\005\000\
\002\000\002\000\003\000\001\000\004\000\001\000\004\000\002\000\
\005\000\002\000\002\000\001\000\003\000\002\000\001\000\004\000\
\003\000\001\000\002\000\001\000\002\000\001\000\002\000\005\000\
\002\000\002\000\001\000\004\000\001\000\002\000\001\000\002\000\
\001\000\002\000\005\000\002\000\002\000\001\000\001\000\004\000\
\003\000\001\000\001\000\002\000\001\000\000\000\002\000\004\000\
\001\000\002\000\001\000\000\000\002\000\004\000\002\000\002\000\
\001\000\002\000\001\000\001\000\003\000\002\000\001\000\002\000\
\001\000\001\000\003\000\002\000\002\000\001\000\004\000\003\000\
\003\000\002\000\002\000\001\000\004\000\003\000\002\000\003\000\
\002\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\002\000\001\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\147\000\148\000\149\000\150\000\028\000\031\000\
\000\000\000\000\151\000\000\000\152\000\000\000\000\000\002\000\
\000\000\032\000\029\000\030\000\000\000\033\000\000\000\155\000\
\000\000\000\000\000\000\000\000\000\000\007\000\009\000\000\000\
\000\000\044\000\046\000\049\000\000\000\063\000\072\000\000\000\
\000\000\000\000\124\000\127\000\130\000\066\000\075\000\153\000\
\000\000\000\000\000\000\000\000\000\000\065\000\074\000\000\000\
\000\000\000\000\010\000\000\000\000\000\000\000\113\000\000\000\
\078\000\109\000\115\000\000\000\000\000\143\000\000\000\001\000\
\000\000\003\000\000\000\000\000\000\000\016\000\004\000\000\000\
\000\000\000\000\005\000\000\000\025\000\000\000\020\000\006\000\
\040\000\000\000\052\000\045\000\055\000\000\000\042\000\058\000\
\047\000\061\000\133\000\139\000\000\000\132\000\120\000\126\000\
\122\000\128\000\087\000\098\000\090\000\101\000\000\000\089\000\
\100\000\000\000\081\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\083\000\094\000\085\000\096\000\111\000\
\117\000\000\000\119\000\108\000\114\000\000\000\137\000\144\000\
\000\000\000\000\017\000\012\000\014\000\015\000\026\000\021\000\
\023\000\024\000\019\000\050\000\053\000\056\000\059\000\000\000\
\000\000\105\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\062\000\071\000\135\000\141\000\
\000\000\000\000\064\000\073\000\000\000\000\000\000\000\000\000\
\000\000\112\000\118\000\000\000\088\000\099\000\125\000\000\000\
\000\000\000\000\000\000"

let yydgoto = "\002\000\
\024\000\025\000\026\000\074\000\027\000\028\000\083\000\029\000\
\030\000\031\000\086\000\087\000\128\000\032\000\089\000\033\000\
\095\000\034\000\092\000\035\000\097\000\036\000\046\000\047\000\
\065\000\066\000\067\000\058\000"

let yysindex = "\010\000\
\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\232\002\117\003\000\000\002\255\000\000\153\003\029\001\000\000\
\032\003\000\000\000\000\000\000\232\255\000\000\014\255\000\000\
\016\000\086\002\029\001\079\003\029\001\000\000\000\000\194\001\
\243\003\000\000\000\000\000\000\027\002\000\000\000\000\032\003\
\194\001\243\003\000\000\000\000\000\000\000\000\000\000\000\000\
\232\002\117\003\171\003\032\003\010\003\000\000\000\000\194\001\
\243\003\050\002\000\000\032\003\032\003\253\254\000\000\012\255\
\000\000\000\000\000\000\027\002\013\255\000\000\022\255\000\000\
\029\001\000\000\029\001\079\003\029\001\000\000\000\000\029\001\
\029\001\079\003\000\000\029\001\000\000\086\002\000\000\000\000\
\000\000\243\003\000\000\000\000\000\000\194\001\000\000\000\000\
\000\000\000\000\000\000\000\000\025\255\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\032\003\000\000\
\000\000\035\255\000\000\189\003\135\003\207\003\099\003\050\002\
\032\255\059\002\005\004\000\000\000\000\000\000\000\000\000\000\
\000\000\037\255\000\000\000\000\000\000\232\002\000\000\000\000\
\027\002\099\003\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\041\255\000\000\232\002\099\003\059\002\005\004\189\003\135\003\
\225\003\099\003\059\002\005\004\099\003\099\003\004\255\044\255\
\050\002\005\004\059\002\032\003\000\000\000\000\000\000\000\000\
\048\255\232\002\000\000\000\000\047\255\099\003\052\255\058\255\
\189\003\000\000\000\000\000\000\000\000\000\000\000\000\063\255\
\189\003\099\003\189\003"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\173\000\079\000\000\000\041\000\000\000\189\000\082\000\000\000\
\121\000\000\000\000\000\000\000\084\000\000\000\086\000\000\000\
\000\000\000\000\090\000\000\000\000\000\000\000\000\000\015\004\
\205\000\000\000\000\000\000\000\077\000\000\000\000\000\117\000\
\031\004\221\000\000\000\000\000\000\000\000\000\000\000\000\000\
\237\000\094\000\253\000\121\000\000\000\000\000\000\000\051\001\
\075\001\093\000\000\000\071\000\117\000\016\255\000\000\000\000\
\000\000\000\000\000\000\109\000\000\000\000\000\061\000\000\000\
\096\000\000\000\098\000\000\000\000\000\000\000\000\000\100\000\
\101\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\095\001\000\000\000\000\000\000\111\001\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\121\000\000\000\
\000\000\000\000\000\000\181\000\000\000\197\000\087\255\125\000\
\000\000\213\000\229\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\127\001\000\000\000\000\
\141\000\135\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\143\001\
\000\000\000\000\159\001\089\255\245\000\181\001\199\001\000\000\
\207\001\087\255\215\001\223\001\087\000\089\255\103\000\000\000\
\157\000\231\001\239\001\071\000\000\000\000\000\000\000\000\000\
\104\000\175\001\000\000\000\000\000\000\087\255\000\000\000\000\
\247\001\000\000\000\000\021\000\000\000\000\000\000\000\000\000\
\255\001\087\000\007\002"

let yygindex = "\000\000\
\000\000\147\000\013\000\028\000\085\000\108\000\188\255\252\001\
\138\003\253\001\248\255\249\255\244\255\007\003\039\000\066\003\
\238\255\164\003\014\000\081\000\218\255\019\002\208\255\065\000\
\242\255\194\255\054\000\008\000"

let yytablesize = 1331
let yytable = "\132\000\
\016\000\109\000\060\000\106\000\064\000\054\000\055\000\141\000\
\037\000\165\000\001\000\012\000\061\000\145\000\071\000\072\000\
\037\000\037\000\127\000\166\000\038\000\038\000\037\000\105\000\
\037\000\102\000\134\000\101\000\037\000\062\000\107\000\137\000\
\107\000\069\000\037\000\138\000\037\000\115\000\126\000\114\000\
\154\000\152\000\112\000\113\000\037\000\129\000\131\000\037\000\
\130\000\155\000\169\000\149\000\062\000\172\000\104\000\178\000\
\037\000\037\000\185\000\037\000\036\000\107\000\188\000\191\000\
\062\000\121\000\193\000\037\000\037\000\125\000\116\000\148\000\
\062\000\062\000\194\000\037\000\140\000\195\000\076\000\103\000\
\037\000\011\000\037\000\146\000\037\000\037\000\110\000\037\000\
\037\000\008\000\044\000\037\000\134\000\102\000\124\000\018\000\
\154\000\013\000\153\000\027\000\022\000\110\000\107\000\039\000\
\132\000\110\000\168\000\151\000\145\000\054\000\075\000\109\000\
\081\000\147\000\110\000\133\000\116\000\100\000\037\000\000\000\
\116\000\000\000\000\000\062\000\138\000\177\000\000\000\000\000\
\038\000\000\000\044\000\167\000\150\000\076\000\110\000\082\000\
\000\000\000\000\000\000\105\000\142\000\037\000\000\000\181\000\
\037\000\126\000\173\000\000\000\136\000\183\000\167\000\148\000\
\112\000\184\000\000\000\000\000\136\000\187\000\000\000\186\000\
\081\000\059\000\037\000\000\000\000\000\000\000\081\000\179\000\
\167\000\192\000\075\000\107\000\079\000\079\000\167\000\088\000\
\000\000\167\000\167\000\037\000\068\000\186\000\000\000\082\000\
\062\000\037\000\000\000\000\000\082\000\082\000\189\000\000\000\
\000\000\076\000\167\000\103\000\070\000\173\000\000\000\000\000\
\000\000\124\000\000\000\000\000\048\000\179\000\167\000\189\000\
\000\000\150\000\000\000\000\000\041\000\000\000\000\000\000\000\
\000\000\176\000\000\000\139\000\129\000\140\000\000\000\142\000\
\000\000\000\000\143\000\144\000\043\000\000\000\146\000\000\000\
\003\000\004\000\005\000\006\000\103\000\000\000\009\000\010\000\
\011\000\012\000\013\000\014\000\121\000\017\000\000\000\000\000\
\000\000\021\000\068\000\000\000\106\000\000\000\000\000\000\000\
\000\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\
\010\000\011\000\012\000\013\000\014\000\015\000\017\000\018\000\
\019\000\020\000\021\000\022\000\023\000\035\000\035\000\035\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\035\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
\154\000\154\000\095\000\154\000\154\000\154\000\154\000\154\000\
\154\000\154\000\154\000\154\000\154\000\034\000\034\000\034\000\
\034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
\034\000\034\000\097\000\034\000\034\000\034\000\034\000\034\000\
\034\000\134\000\134\000\134\000\134\000\110\000\134\000\110\000\
\134\000\134\000\134\000\134\000\134\000\134\000\054\000\134\000\
\134\000\134\000\134\000\134\000\134\000\110\000\134\000\110\000\
\134\000\134\000\134\000\134\000\134\000\134\000\060\000\134\000\
\134\000\138\000\138\000\138\000\138\000\107\000\138\000\107\000\
\138\000\138\000\138\000\138\000\138\000\138\000\077\000\138\000\
\138\000\138\000\138\000\138\000\138\000\110\000\138\000\110\000\
\138\000\138\000\138\000\138\000\138\000\138\000\131\000\138\000\
\138\000\136\000\136\000\136\000\136\000\110\000\136\000\000\000\
\136\000\136\000\136\000\136\000\136\000\136\000\080\000\136\000\
\136\000\136\000\136\000\136\000\136\000\000\000\136\000\000\000\
\136\000\136\000\136\000\136\000\136\000\136\000\104\000\136\000\
\136\000\068\000\068\000\000\000\123\000\000\000\000\000\000\000\
\000\000\068\000\068\000\068\000\068\000\068\000\000\000\068\000\
\068\000\070\000\070\000\068\000\068\000\068\000\091\000\068\000\
\000\000\070\000\070\000\070\000\070\000\070\000\093\000\070\000\
\070\000\043\000\043\000\070\000\070\000\070\000\084\000\070\000\
\000\000\043\000\041\000\043\000\043\000\043\000\086\000\043\000\
\043\000\123\000\123\000\041\000\041\000\041\000\051\000\041\000\
\000\000\123\000\043\000\123\000\123\000\123\000\057\000\123\000\
\123\000\091\000\091\000\043\000\043\000\043\000\067\000\043\000\
\000\000\091\000\121\000\091\000\091\000\091\000\069\000\091\000\
\091\000\093\000\093\000\121\000\121\000\121\000\092\000\121\000\
\000\000\093\000\000\000\093\000\093\000\093\000\000\000\093\000\
\093\000\000\000\000\000\000\000\000\000\077\000\078\000\084\000\
\085\000\000\000\000\000\000\000\045\000\003\000\004\000\005\000\
\006\000\007\000\008\000\009\000\010\000\011\000\012\000\013\000\
\014\000\015\000\017\000\018\000\019\000\020\000\021\000\022\000\
\023\000\000\000\093\000\098\000\000\000\000\000\000\000\084\000\
\084\000\000\000\000\000\093\000\098\000\000\000\000\000\084\000\
\000\000\084\000\084\000\084\000\045\000\084\000\084\000\084\000\
\085\000\000\000\093\000\098\000\000\000\084\000\085\000\086\000\
\086\000\077\000\078\000\000\000\000\000\000\000\000\000\086\000\
\000\000\086\000\086\000\086\000\000\000\086\000\086\000\000\000\
\000\000\000\000\000\000\051\000\051\000\000\000\000\000\000\000\
\000\000\000\000\000\000\051\000\098\000\051\000\051\000\051\000\
\093\000\051\000\051\000\057\000\057\000\000\000\000\000\000\000\
\000\000\000\000\000\000\057\000\000\000\057\000\057\000\057\000\
\000\000\057\000\057\000\067\000\067\000\000\000\000\000\000\000\
\000\000\000\000\000\000\067\000\000\000\067\000\067\000\067\000\
\000\000\067\000\067\000\125\000\125\000\000\000\000\000\000\000\
\000\000\000\000\000\000\125\000\000\000\125\000\125\000\125\000\
\000\000\125\000\125\000\069\000\069\000\000\000\000\000\000\000\
\000\000\000\000\000\000\069\000\000\000\069\000\069\000\069\000\
\000\000\069\000\069\000\092\000\092\000\000\000\000\000\000\000\
\000\000\000\000\123\000\092\000\000\000\092\000\092\000\092\000\
\000\000\092\000\092\000\123\000\123\000\123\000\000\000\123\000\
\009\000\010\000\000\000\012\000\091\000\014\000\000\000\017\000\
\000\000\000\000\000\000\000\000\093\000\091\000\091\000\091\000\
\000\000\091\000\000\000\000\000\084\000\093\000\093\000\093\000\
\000\000\093\000\000\000\000\000\086\000\084\000\084\000\084\000\
\000\000\084\000\000\000\000\000\051\000\086\000\086\000\086\000\
\000\000\086\000\000\000\000\000\057\000\051\000\051\000\051\000\
\000\000\051\000\000\000\000\000\067\000\057\000\057\000\057\000\
\000\000\057\000\000\000\000\000\069\000\067\000\067\000\067\000\
\000\000\067\000\000\000\000\000\092\000\069\000\069\000\069\000\
\041\000\069\000\000\000\000\000\056\000\092\000\092\000\092\000\
\000\000\092\000\000\000\003\000\004\000\005\000\006\000\000\000\
\000\000\000\000\056\000\011\000\000\000\013\000\000\000\094\000\
\000\000\000\000\000\000\099\000\021\000\000\000\000\000\000\000\
\094\000\000\000\003\000\004\000\005\000\006\000\000\000\000\000\
\041\000\056\000\011\000\122\000\013\000\000\000\000\000\094\000\
\099\000\116\000\117\000\053\000\012\000\000\000\118\000\000\000\
\119\000\000\000\135\000\042\000\000\000\048\000\000\000\057\000\
\000\000\000\000\056\000\000\000\000\000\000\000\000\000\000\000\
\056\000\000\000\007\000\008\000\000\000\057\000\000\000\000\000\
\094\000\090\000\073\000\000\000\018\000\019\000\020\000\000\000\
\022\000\023\000\090\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\042\000\057\000\000\000\123\000\000\000\
\000\000\090\000\122\000\157\000\163\000\122\000\135\000\000\000\
\000\000\171\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\057\000\000\000\175\000\
\122\000\000\000\039\000\057\000\000\000\000\000\000\000\000\000\
\000\000\000\000\063\000\000\000\000\000\000\000\070\000\090\000\
\000\000\000\000\122\000\000\000\171\000\122\000\157\000\163\000\
\122\000\000\000\171\000\122\000\122\000\043\000\000\000\175\000\
\171\000\063\000\000\000\000\000\000\000\123\000\158\000\164\000\
\123\000\000\000\108\000\170\000\122\000\063\000\000\000\122\000\
\000\000\000\000\000\000\091\000\096\000\063\000\063\000\122\000\
\122\000\122\000\000\000\123\000\091\000\096\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\043\000\000\000\000\000\
\000\000\000\000\000\000\091\000\096\000\123\000\170\000\000\000\
\123\000\158\000\164\000\123\000\170\000\000\000\123\000\123\000\
\003\000\004\000\005\000\006\000\170\000\000\000\009\000\010\000\
\011\000\012\000\013\000\014\000\000\000\017\000\000\000\123\000\
\063\000\021\000\123\000\000\000\000\000\096\000\000\000\000\000\
\000\000\091\000\123\000\123\000\123\000\000\000\000\000\000\000\
\000\000\000\000\003\000\004\000\005\000\006\000\000\000\174\000\
\116\000\117\000\011\000\012\000\013\000\118\000\000\000\119\000\
\043\000\000\000\000\000\053\000\120\000\091\000\096\000\000\000\
\003\000\004\000\005\000\006\000\180\000\060\000\009\000\010\000\
\011\000\012\000\013\000\014\000\000\000\017\000\000\000\061\000\
\000\000\021\000\000\000\000\000\000\000\063\000\000\000\000\000\
\000\000\000\000\000\000\190\000\000\000\000\000\000\000\000\000\
\091\000\096\000\000\000\043\000\000\000\000\000\091\000\096\000\
\000\000\000\000\000\000\000\000\000\000\096\000\091\000\003\000\
\004\000\005\000\006\000\007\000\008\000\049\000\050\000\011\000\
\012\000\013\000\051\000\080\000\000\000\018\000\019\000\020\000\
\053\000\022\000\023\000\003\000\004\000\005\000\006\000\000\000\
\165\000\116\000\117\000\011\000\012\000\013\000\118\000\000\000\
\119\000\000\000\166\000\000\000\053\000\003\000\004\000\005\000\
\006\000\000\000\000\000\009\000\010\000\011\000\012\000\013\000\
\014\000\000\000\017\000\000\000\040\000\000\000\021\000\003\000\
\004\000\005\000\006\000\000\000\000\000\116\000\117\000\011\000\
\012\000\013\000\118\000\000\000\119\000\000\000\156\000\000\000\
\053\000\003\000\004\000\005\000\006\000\000\000\000\000\049\000\
\050\000\011\000\012\000\013\000\051\000\000\000\052\000\000\000\
\000\000\000\000\053\000\003\000\004\000\005\000\006\000\000\000\
\000\000\049\000\050\000\011\000\012\000\013\000\051\000\000\000\
\111\000\000\000\000\000\000\000\053\000\003\000\004\000\005\000\
\006\000\000\000\000\000\116\000\117\000\011\000\012\000\013\000\
\118\000\000\000\119\000\000\000\000\000\000\000\053\000\003\000\
\004\000\005\000\006\000\000\000\000\000\159\000\160\000\011\000\
\012\000\013\000\161\000\000\000\162\000\000\000\000\000\000\000\
\053\000\003\000\004\000\005\000\006\000\000\000\000\000\159\000\
\160\000\011\000\012\000\013\000\161\000\000\000\182\000\000\000\
\000\000\000\000\053\000\003\000\004\000\005\000\006\000\000\000\
\000\000\009\000\010\000\011\000\000\000\013\000\014\000\000\000\
\017\000\000\000\000\000\000\000\053\000\003\000\004\000\005\000\
\006\000\000\000\000\000\116\000\117\000\011\000\000\000\013\000\
\118\000\000\000\119\000\041\000\041\000\000\000\053\000\000\000\
\000\000\000\000\000\000\041\000\000\000\041\000\041\000\041\000\
\000\000\041\000\041\000\121\000\121\000\000\000\000\000\000\000\
\000\000\000\000\000\000\121\000\000\000\121\000\121\000\121\000\
\000\000\121\000\121\000"

let yycheck = "\062\000\
\000\000\050\000\006\001\042\000\017\000\014\000\014\000\076\000\
\001\000\006\001\001\000\010\001\016\001\082\000\001\001\000\000\
\009\000\010\000\057\000\016\001\000\000\009\000\015\000\042\000\
\017\000\040\000\015\001\040\000\021\000\017\000\015\001\019\001\
\017\001\021\000\027\000\014\001\029\000\052\000\057\000\052\000\
\000\000\017\001\051\000\051\000\037\000\060\000\061\000\040\000\
\061\000\015\001\019\001\090\000\040\000\017\001\041\000\015\001\
\049\000\050\000\015\001\052\000\000\000\049\000\015\001\017\001\
\052\000\053\000\015\001\060\000\061\000\056\000\000\000\090\000\
\060\000\061\000\017\001\068\000\000\000\015\001\000\000\041\000\
\073\000\000\000\075\000\000\000\077\000\000\000\000\000\080\000\
\081\000\000\000\010\000\084\000\000\000\000\000\056\000\000\000\
\111\000\000\000\111\000\000\000\000\000\015\001\000\000\000\000\
\167\000\017\001\119\000\094\000\000\000\118\000\026\000\160\000\
\028\000\086\000\050\000\062\000\000\000\037\000\111\000\255\255\
\000\000\255\255\255\255\111\000\000\000\138\000\255\255\255\255\
\116\000\255\255\050\000\119\000\094\000\026\000\000\000\028\000\
\255\255\255\255\255\255\158\000\000\000\134\000\255\255\156\000\
\137\000\164\000\134\000\255\255\068\000\162\000\138\000\170\000\
\161\000\166\000\255\255\255\255\000\000\172\000\255\255\172\000\
\076\000\015\000\155\000\255\255\255\255\255\255\082\000\155\000\
\156\000\182\000\086\000\159\000\000\000\027\000\162\000\029\000\
\255\255\165\000\166\000\172\000\000\000\194\000\255\255\076\000\
\172\000\178\000\255\255\255\255\000\000\082\000\178\000\255\255\
\255\255\086\000\182\000\157\000\000\000\185\000\255\255\255\255\
\255\255\163\000\255\255\255\255\000\000\193\000\194\000\195\000\
\255\255\171\000\255\255\255\255\000\000\255\255\255\255\255\255\
\255\255\137\000\255\255\073\000\000\000\075\000\255\255\077\000\
\255\255\255\255\080\000\081\000\000\000\255\255\084\000\255\255\
\001\001\002\001\003\001\004\001\000\000\255\255\007\001\008\001\
\009\001\010\001\011\001\012\001\000\000\014\001\255\255\255\255\
\255\255\018\001\019\001\255\255\000\000\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\000\000\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\000\000\015\001\016\001\017\001\018\001\019\001\
\020\001\005\001\006\001\007\001\008\001\015\001\010\001\017\001\
\012\001\013\001\014\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\007\001\008\001\015\001\010\001\017\001\
\012\001\013\001\014\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\007\001\008\001\015\001\010\001\017\001\
\012\001\013\001\014\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\007\001\008\001\017\001\010\001\015\001\
\012\001\013\001\014\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\007\001\008\001\015\001\010\001\255\255\
\012\001\013\001\014\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\007\001\008\001\255\255\010\001\255\255\
\012\001\013\001\014\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\255\255\000\000\255\255\255\255\255\255\
\255\255\013\001\006\001\015\001\016\001\017\001\255\255\019\001\
\020\001\005\001\006\001\015\001\016\001\017\001\000\000\019\001\
\255\255\013\001\006\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\015\001\016\001\017\001\000\000\019\001\
\255\255\013\001\006\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\015\001\016\001\017\001\000\000\019\001\
\255\255\013\001\006\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\015\001\016\001\017\001\000\000\019\001\
\255\255\013\001\006\001\015\001\016\001\017\001\000\000\019\001\
\020\001\005\001\006\001\015\001\016\001\017\001\000\000\019\001\
\255\255\013\001\255\255\015\001\016\001\017\001\255\255\019\001\
\020\001\255\255\255\255\255\255\255\255\026\000\026\000\028\000\
\028\000\255\255\255\255\255\255\010\000\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\255\255\032\000\033\000\255\255\255\255\255\255\005\001\
\006\001\255\255\255\255\041\000\042\000\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\050\000\019\001\020\001\076\000\
\076\000\255\255\056\000\057\000\255\255\082\000\082\000\005\001\
\006\001\086\000\086\000\255\255\255\255\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\255\255\
\255\255\255\255\255\255\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\090\000\015\001\016\001\017\001\
\094\000\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\006\001\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\015\001\016\001\017\001\255\255\019\001\
\007\001\008\001\255\255\010\001\006\001\012\001\255\255\014\001\
\255\255\255\255\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\255\255\019\001\255\255\255\255\006\001\015\001\016\001\017\001\
\010\000\019\001\255\255\255\255\014\000\015\001\016\001\017\001\
\255\255\019\001\255\255\001\001\002\001\003\001\004\001\255\255\
\255\255\255\255\028\000\009\001\255\255\011\001\255\255\033\000\
\255\255\255\255\255\255\037\000\018\001\255\255\255\255\255\255\
\042\000\255\255\001\001\002\001\003\001\004\001\255\255\255\255\
\050\000\051\000\009\001\053\000\011\001\255\255\255\255\057\000\
\058\000\007\001\008\001\018\001\010\001\255\255\012\001\255\255\
\014\001\255\255\068\000\010\000\255\255\012\000\255\255\014\000\
\255\255\255\255\076\000\255\255\255\255\255\255\255\255\255\255\
\082\000\255\255\005\001\006\001\255\255\028\000\255\255\255\255\
\090\000\032\000\013\001\255\255\015\001\016\001\017\001\255\255\
\019\001\020\001\041\000\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\050\000\051\000\255\255\053\000\255\255\
\255\255\056\000\116\000\117\000\118\000\119\000\120\000\255\255\
\255\255\123\000\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\076\000\255\255\137\000\
\138\000\255\255\009\000\082\000\255\255\255\255\255\255\255\255\
\255\255\255\255\017\000\255\255\255\255\255\255\021\000\094\000\
\255\255\255\255\156\000\255\255\158\000\159\000\160\000\161\000\
\162\000\255\255\164\000\165\000\166\000\010\000\255\255\169\000\
\170\000\040\000\255\255\255\255\255\255\116\000\117\000\118\000\
\119\000\255\255\049\000\122\000\182\000\052\000\255\255\185\000\
\255\255\255\255\255\255\032\000\033\000\060\000\061\000\193\000\
\194\000\195\000\255\255\138\000\041\000\042\000\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\050\000\255\255\255\255\
\255\255\255\255\255\255\056\000\057\000\156\000\157\000\255\255\
\159\000\160\000\161\000\162\000\163\000\255\255\165\000\166\000\
\001\001\002\001\003\001\004\001\171\000\255\255\007\001\008\001\
\009\001\010\001\011\001\012\001\255\255\014\001\255\255\182\000\
\111\000\018\001\185\000\255\255\255\255\090\000\255\255\255\255\
\255\255\094\000\193\000\194\000\195\000\255\255\255\255\255\255\
\255\255\255\255\001\001\002\001\003\001\004\001\255\255\134\000\
\007\001\008\001\009\001\010\001\011\001\012\001\255\255\014\001\
\117\000\255\255\255\255\018\001\019\001\122\000\123\000\255\255\
\001\001\002\001\003\001\004\001\155\000\006\001\007\001\008\001\
\009\001\010\001\011\001\012\001\255\255\014\001\255\255\016\001\
\255\255\018\001\255\255\255\255\255\255\172\000\255\255\255\255\
\255\255\255\255\255\255\178\000\255\255\255\255\255\255\255\255\
\157\000\158\000\255\255\160\000\255\255\255\255\163\000\164\000\
\255\255\255\255\255\255\255\255\255\255\170\000\171\000\001\001\
\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\255\255\015\001\016\001\017\001\
\018\001\019\001\020\001\001\001\002\001\003\001\004\001\255\255\
\006\001\007\001\008\001\009\001\010\001\011\001\012\001\255\255\
\014\001\255\255\016\001\255\255\018\001\001\001\002\001\003\001\
\004\001\255\255\255\255\007\001\008\001\009\001\010\001\011\001\
\012\001\255\255\014\001\255\255\016\001\255\255\018\001\001\001\
\002\001\003\001\004\001\255\255\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\255\255\014\001\255\255\016\001\255\255\
\018\001\001\001\002\001\003\001\004\001\255\255\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\255\255\014\001\255\255\
\255\255\255\255\018\001\001\001\002\001\003\001\004\001\255\255\
\255\255\007\001\008\001\009\001\010\001\011\001\012\001\255\255\
\014\001\255\255\255\255\255\255\018\001\001\001\002\001\003\001\
\004\001\255\255\255\255\007\001\008\001\009\001\010\001\011\001\
\012\001\255\255\014\001\255\255\255\255\255\255\018\001\001\001\
\002\001\003\001\004\001\255\255\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\255\255\014\001\255\255\255\255\255\255\
\018\001\001\001\002\001\003\001\004\001\255\255\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\255\255\014\001\255\255\
\255\255\255\255\018\001\001\001\002\001\003\001\004\001\255\255\
\255\255\007\001\008\001\009\001\255\255\011\001\012\001\255\255\
\014\001\255\255\255\255\255\255\018\001\001\001\002\001\003\001\
\004\001\255\255\255\255\007\001\008\001\009\001\255\255\011\001\
\012\001\255\255\014\001\005\001\006\001\255\255\018\001\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001"

let yynames_const = "\
  EOF\000\
  "

let yynames_block = "\
  IDENT\000\
  CST_CHAR\000\
  CST_INT\000\
  CST_STRING\000\
  SEP\000\
  ESEP\000\
  OPERATOR\000\
  EQ\000\
  SYMOP\000\
  DEREFOP\000\
  TYPE\000\
  PRIM\000\
  INCLUDE\000\
  LPAREN\000\
  RPAREN\000\
  LBRACE\000\
  RBRACE\000\
  LBRACK\000\
  RBRACK\000\
  DEFINE\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'toplevel) in
    Obj.repr(
# 54 "cparser2.mly"
               (_1)
# 580 "cparser2.ml"
               : Ast0.code list))
; (fun __caml_parser_env ->
    Obj.repr(
# 55 "cparser2.mly"
      ([])
# 586 "cparser2.ml"
               : Ast0.code list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel2) in
    Obj.repr(
# 60 "cparser2.mly"
                                    (Ast0.EXPR(_1)::_2)
# 594 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sep) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 61 "cparser2.mly"
                                    (Ast0.SEP(_1)::_2)
# 602 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'definesym) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel3) in
    Obj.repr(
# 62 "cparser2.mly"
                                    (_1@_2)
# 610 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'define) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 63 "cparser2.mly"
                                    (_1@_2)
# 618 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 64 "cparser2.mly"
                                    ([Ast0.EXPR(_1)])
# 625 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sep) in
    Obj.repr(
# 65 "cparser2.mly"
                                    ([Ast0.SEP(_1)])
# 632 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'defineend) in
    Obj.repr(
# 66 "cparser2.mly"
                                    (_1)
# 639 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 67 "cparser2.mly"
                   (Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])::_2)
# 647 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 68 "cparser2.mly"
                   ([Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])])
# 654 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sep) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 72 "cparser2.mly"
                                    (Ast0.SEP(_1)::_2)
# 662 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sep) in
    Obj.repr(
# 73 "cparser2.mly"
                                    ([Ast0.SEP(_1)])
# 669 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'definesym) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel3) in
    Obj.repr(
# 74 "cparser2.mly"
                                    (_1@_2)
# 677 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'define) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 75 "cparser2.mly"
                                    (_1@_2)
# 685 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'defineend) in
    Obj.repr(
# 76 "cparser2.mly"
                                    (_1)
# 692 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 77 "cparser2.mly"
                   (Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])::_2)
# 700 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 78 "cparser2.mly"
                   ([Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])])
# 707 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressionsd) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel2) in
    Obj.repr(
# 82 "cparser2.mly"
                                    (Ast0.EXPR(_1)::_2)
# 715 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsdend) in
    Obj.repr(
# 83 "cparser2.mly"
                                    ([Ast0.EXPR(_1)])
# 722 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sep) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 84 "cparser2.mly"
                                    (Ast0.SEP(_1)::_2)
# 730 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sep) in
    Obj.repr(
# 85 "cparser2.mly"
                                    ([Ast0.SEP(_1)])
# 737 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'definesym) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel3) in
    Obj.repr(
# 86 "cparser2.mly"
                                    (_1@_2)
# 745 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'define) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 87 "cparser2.mly"
                                    (_1@_2)
# 753 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'defineend) in
    Obj.repr(
# 88 "cparser2.mly"
                                    (_1)
# 760 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 89 "cparser2.mly"
                   (Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])::_2)
# 768 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 90 "cparser2.mly"
                   ([Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])])
# 775 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 93 "cparser2.mly"
                                    (mkinfo _1)
# 782 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 94 "cparser2.mly"
                                    ("{",mkbinfo _1)
# 789 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 95 "cparser2.mly"
                                    ("}",mkbinfo _1)
# 796 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 96 "cparser2.mly"
                                    (mkinfo _1)
# 803 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 97 "cparser2.mly"
                                    (")",mkbinfo _1)
# 810 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 98 "cparser2.mly"
                                    ("]",mkbinfo _1)
# 817 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 103 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)])])])
# 826 "cparser2.ml"
               : 'definesym))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 108 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)]);
		   Ast0.PAREN(_4,Ast.KNOWN)])])
# 839 "cparser2.ml"
               : 'define))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 114 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)])])])
# 848 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 117 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1)])
# 855 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 119 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)]);
		   Ast0.PAREN(_4,Ast.KNOWN)])])
# 868 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'args) in
    Obj.repr(
# 123 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)]);
		   Ast0.PAREN(_4,Ast.ENDUNKNOWN)])])
# 880 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 130 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 888 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 131 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 895 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 132 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 903 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 133 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 910 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 134 "cparser2.mly"
                                    (_1)
# 917 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 137 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 925 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 138 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 932 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 139 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 940 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 140 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 947 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 141 "cparser2.mly"
                                    (_1)
# 954 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 145 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 962 "cparser2.ml"
               : 'expressions2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 146 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 969 "cparser2.ml"
               : 'expressions2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 147 "cparser2.mly"
                                    (_1)
# 976 "cparser2.ml"
               : 'expressions2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 150 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 984 "cparser2.ml"
               : 'expressions2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 151 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 991 "cparser2.ml"
               : 'expressions2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 152 "cparser2.mly"
                                    (_1)
# 998 "cparser2.ml"
               : 'expressions2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 156 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1006 "cparser2.ml"
               : 'expressions3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 157 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1013 "cparser2.ml"
               : 'expressions3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 158 "cparser2.mly"
                                    (_1)
# 1020 "cparser2.ml"
               : 'expressions3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 161 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1028 "cparser2.ml"
               : 'expressions3end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 162 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1035 "cparser2.ml"
               : 'expressions3end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 163 "cparser2.mly"
                                    (_1)
# 1042 "cparser2.ml"
               : 'expressions3end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 167 "cparser2.mly"
                                    (Ast0.PAREN(_2,Ast.KNOWN)::_4)
# 1052 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 168 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1060 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 169 "cparser2.mly"
                                      ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1071 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsd) in
    Obj.repr(
# 170 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1079 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhs) in
    Obj.repr(
# 171 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1087 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 172 "cparser2.mly"
                                    ([Ast0.PAREN(_2,Ast.KNOWN)])
# 1096 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 173 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1103 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 174 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1113 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 175 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1120 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 178 "cparser2.mly"
                                    (Ast0.PAREN(_2,Ast.KNOWN)::_4)
# 1130 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 179 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1138 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 180 "cparser2.mly"
                                         ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1149 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsdend) in
    Obj.repr(
# 181 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1157 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhsend) in
    Obj.repr(
# 182 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1165 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 183 "cparser2.mly"
                                   ([Ast0.ASSIGN(mkinfo _1,[],Ast.ENDUNKNOWN)])
# 1172 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 184 "cparser2.mly"
                                    ([Ast0.PAREN(_2,Ast.KNOWN)])
# 1181 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 185 "cparser2.mly"
                                    ([Ast0.PAREN(_2,Ast.ENDUNKNOWN)])
# 1189 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 186 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1196 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 187 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1206 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 188 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.ENDUNKNOWN])
# 1215 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 189 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1222 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 193 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1230 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 194 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1237 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 195 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1245 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 196 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1252 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 197 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1260 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 198 "cparser2.mly"
                                      ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1271 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsd) in
    Obj.repr(
# 199 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1279 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhs) in
    Obj.repr(
# 200 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1287 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 201 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1294 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 202 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1304 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 203 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1311 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 206 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1319 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 207 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1326 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 208 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1334 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 209 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1341 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 210 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1349 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 211 "cparser2.mly"
                                         ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1360 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsdend) in
    Obj.repr(
# 212 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1368 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhsend) in
    Obj.repr(
# 213 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1376 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 214 "cparser2.mly"
                                   ([Ast0.ASSIGN(mkinfo _1,[],Ast.ENDUNKNOWN)])
# 1383 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 215 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1390 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 216 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1400 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 217 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.ENDUNKNOWN])
# 1409 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 218 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1416 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 221 "cparser2.mly"
                                ([Ast0.EXPR(_1)])
# 1423 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'args2) in
    Obj.repr(
# 222 "cparser2.mly"
                                (Ast0.EXPR(_1)::_2)
# 1431 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'args2) in
    Obj.repr(
# 223 "cparser2.mly"
                                (_1)
# 1438 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    Obj.repr(
# 224 "cparser2.mly"
                                ([])
# 1444 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'args) in
    Obj.repr(
# 227 "cparser2.mly"
                                (Ast0.SEP(mkinfo _1)::_2)
# 1452 "cparser2.ml"
               : 'args2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'args) in
    Obj.repr(
# 228 "cparser2.mly"
                                (Ast0.EXPR([Ast0.STRUCT(_2,Ast.KNOWN)])::_4)
# 1462 "cparser2.ml"
               : 'args2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 231 "cparser2.mly"
                                ([Ast0.EXPR(_1)])
# 1469 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'args2end) in
    Obj.repr(
# 232 "cparser2.mly"
                                (Ast0.EXPR(_1)::_2)
# 1477 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'args2end) in
    Obj.repr(
# 233 "cparser2.mly"
                                (_1)
# 1484 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    Obj.repr(
# 234 "cparser2.mly"
                                ([])
# 1490 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 237 "cparser2.mly"
                                (Ast0.SEP(mkinfo _1)::_2)
# 1498 "cparser2.ml"
               : 'args2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 238 "cparser2.mly"
                                (Ast0.EXPR([Ast0.STRUCT(_2,Ast.KNOWN)])::_4)
# 1508 "cparser2.ml"
               : 'args2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 239 "cparser2.mly"
                                ([Ast0.EXPR([Ast0.STRUCT(_2,Ast.ENDUNKNOWN)])])
# 1516 "cparser2.ml"
               : 'args2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 243 "cparser2.mly"
                                (Ast0.SYMBOL(_1)::_2)
# 1524 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 244 "cparser2.mly"
                                ([Ast0.SYMBOL(_1)])
# 1531 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 245 "cparser2.mly"
                                (Ast0.DSYMBOL(_1)::_2)
# 1539 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 246 "cparser2.mly"
                                ([Ast0.DSYMBOL(_1)])
# 1546 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 247 "cparser2.mly"
                                (_1)
# 1553 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 248 "cparser2.mly"
                                ([Ast0.STRUCT(_2,Ast.KNOWN)])
# 1562 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 251 "cparser2.mly"
                                (Ast0.SYMBOL(_1)::_2)
# 1570 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 252 "cparser2.mly"
                                ([Ast0.SYMBOL(_1)])
# 1577 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 253 "cparser2.mly"
                                (Ast0.DSYMBOL(_1)::_2)
# 1585 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 254 "cparser2.mly"
                                ([Ast0.DSYMBOL(_1)])
# 1592 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 255 "cparser2.mly"
                                (_1)
# 1599 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 256 "cparser2.mly"
                                ([Ast0.STRUCT(_2,Ast.KNOWN)])
# 1608 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 257 "cparser2.mly"
                                ([Ast0.STRUCT(_2,Ast.ENDUNKNOWN)])
# 1616 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'atoken) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 261 "cparser2.mly"
                                      (_1::_2)
# 1624 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'atoken) in
    Obj.repr(
# 262 "cparser2.mly"
                                      ([_1])
# 1631 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 263 "cparser2.mly"
                                      (Ast0.ARRAY(_2,Ast.KNOWN)::_4)
# 1641 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 264 "cparser2.mly"
                                      ([Ast0.ARRAY(_2,Ast.KNOWN)])
# 1650 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 265 "cparser2.mly"
                                      (Ast0.ARRAY([],Ast.KNOWN)::_3)
# 1659 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 266 "cparser2.mly"
                                      ([Ast0.ARRAY([],Ast.KNOWN)])
# 1667 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'atoken) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 269 "cparser2.mly"
                                      (_1::_2)
# 1675 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'atoken) in
    Obj.repr(
# 270 "cparser2.mly"
                                      ([_1])
# 1682 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 271 "cparser2.mly"
                                      (Ast0.ARRAY(_2,Ast.KNOWN)::_4)
# 1692 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 272 "cparser2.mly"
                                      ([Ast0.ARRAY(_2,Ast.KNOWN)])
# 1701 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 273 "cparser2.mly"
                                      ([Ast0.ARRAY(_2,Ast.ENDUNKNOWN)])
# 1709 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 274 "cparser2.mly"
                                      (Ast0.ARRAY([],Ast.KNOWN)::_3)
# 1718 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 275 "cparser2.mly"
                                      ([Ast0.ARRAY([],Ast.KNOWN)])
# 1726 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 276 "cparser2.mly"
                                      ([Ast0.ARRAY([],Ast.ENDUNKNOWN)])
# 1733 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 279 "cparser2.mly"
                                      (Ast0.IDENT(mkinfo _1))
# 1740 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 280 "cparser2.mly"
                                      (Ast0.CHAR(mkinfo _1))
# 1747 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 281 "cparser2.mly"
                                      (Ast0.INT(mkinfo _1))
# 1754 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 282 "cparser2.mly"
                                      (Ast0.STR(mkinfo _1))
# 1761 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 283 "cparser2.mly"
                                      (Ast0.SYMOP(mkinfo _1))
# 1768 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 284 "cparser2.mly"
                                      (Ast0.TYPE(mkinfo _1))
# 1775 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 287 "cparser2.mly"
                                      (Ast0.DEREFOP(mkinfo _1)::_2)
# 1783 "cparser2.ml"
               : 'dsymbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 288 "cparser2.mly"
                                      ([Ast0.DEREFOP(mkinfo _1)])
# 1790 "cparser2.ml"
               : 'dsymbol))
(* Entry interpret *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let interpret (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Ast0.code list)
