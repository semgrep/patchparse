type token =
  | IDENT of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | CST_CHAR of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | CST_INT of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | CST_STRING of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | SEP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | ESEP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | OPERATOR of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | EQ of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | SYMOP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | DEREFOP of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | TYPE of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | PRIM of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | INCLUDE of (string * (int * Parse_error.linetype * Parse_error.atfront))
  | EOF
  | LPAREN of (int * Parse_error.linetype * Parse_error.atfront)
  | RPAREN of (int * Parse_error.linetype * Parse_error.atfront)
  | LBRACE of (int * Parse_error.linetype * Parse_error.atfront)
  | RBRACE of (int * Parse_error.linetype * Parse_error.atfront)
  | LBRACK of (int * Parse_error.linetype * Parse_error.atfront)
  | RBRACK of (int * Parse_error.linetype * Parse_error.atfront)
  | DEFINE of (int * Parse_error.linetype * Parse_error.atfront)

open Parsing;;
let _ = parse_error;;
# 6 "cparser2.mly"
open Parse_error

let parse_error _ =
  display_error "Syntax error"
    (Parsing.symbol_start ()) (Parsing.symbol_end ())

let mkinfo (s,(ln,ty,tag)) = (s,(ln,ty))
let mkbinfo (ln,ty,tag)    = (ln,ty)

let mkcall fn arg known =
  let atfront (_,(_,_,tag)) = tag = FRONT in
  if atfront fn
  then Ast0.DECLARER(mkinfo fn,arg,known)
  else Ast0.CALL(mkinfo fn,arg,known)

# 43 "cparser2.ml"
let yytransl_const = [|
    0 (* EOF *);
    0|]

let yytransl_block = [|
  257 (* IDENT *);
  258 (* CST_CHAR *);
  259 (* CST_INT *);
  260 (* CST_STRING *);
  261 (* SEP *);
  262 (* ESEP *);
  263 (* OPERATOR *);
  264 (* EQ *);
  265 (* SYMOP *);
  266 (* DEREFOP *);
  267 (* TYPE *);
  268 (* PRIM *);
  269 (* INCLUDE *);
  270 (* LPAREN *);
  271 (* RPAREN *);
  272 (* LBRACE *);
  273 (* RBRACE *);
  274 (* LBRACK *);
  275 (* RBRACK *);
  276 (* DEFINE *);
    0|]

let yylhs = "\255\255\
\001\000\001\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\005\000\005\000\005\000\005\000\005\000\
\005\000\006\000\008\000\010\000\010\000\010\000\010\000\003\000\
\003\000\003\000\003\000\003\000\009\000\009\000\009\000\009\000\
\009\000\015\000\015\000\015\000\019\000\019\000\019\000\017\000\
\017\000\017\000\021\000\021\000\021\000\018\000\018\000\018\000\
\018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\011\000\
\011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
\011\000\011\000\011\000\011\000\012\000\012\000\012\000\012\000\
\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
\012\000\012\000\012\000\012\000\013\000\013\000\013\000\013\000\
\026\000\026\000\025\000\025\000\025\000\025\000\027\000\027\000\
\027\000\023\000\023\000\023\000\023\000\023\000\023\000\024\000\
\024\000\024\000\024\000\024\000\024\000\024\000\014\000\014\000\
\014\000\014\000\014\000\014\000\020\000\020\000\020\000\020\000\
\020\000\020\000\020\000\020\000\028\000\028\000\028\000\028\000\
\028\000\028\000\016\000\016\000\000\000"

let yylen = "\002\000\
\002\000\001\000\002\000\002\000\002\000\002\000\001\000\001\000\
\001\000\002\000\001\000\002\000\001\000\002\000\002\000\001\000\
\002\000\001\000\002\000\001\000\002\000\001\000\002\000\002\000\
\001\000\002\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\002\000\005\000\002\000\001\000\005\000\004\000\002\000\
\001\000\002\000\001\000\001\000\002\000\001\000\002\000\001\000\
\001\000\002\000\001\000\001\000\002\000\001\000\001\000\002\000\
\001\000\001\000\002\000\001\000\001\000\004\000\002\000\005\000\
\005\000\002\000\002\000\003\000\001\000\004\000\004\000\001\000\
\004\000\002\000\005\000\005\000\002\000\002\000\001\000\003\000\
\002\000\001\000\004\000\003\000\004\000\003\000\001\000\002\000\
\001\000\002\000\001\000\002\000\005\000\005\000\002\000\002\000\
\001\000\004\000\004\000\001\000\002\000\001\000\002\000\001\000\
\002\000\005\000\005\000\002\000\002\000\001\000\001\000\004\000\
\003\000\004\000\003\000\001\000\001\000\002\000\001\000\000\000\
\002\000\004\000\001\000\002\000\001\000\000\000\002\000\004\000\
\002\000\002\000\001\000\002\000\001\000\001\000\003\000\002\000\
\001\000\002\000\001\000\001\000\003\000\002\000\002\000\001\000\
\004\000\003\000\003\000\002\000\002\000\001\000\004\000\003\000\
\002\000\003\000\002\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\002\000\001\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\158\000\159\000\160\000\028\000\031\000\
\000\000\000\000\161\000\000\000\162\000\000\000\000\000\002\000\
\000\000\032\000\029\000\030\000\000\000\033\000\000\000\165\000\
\000\000\000\000\000\000\000\000\000\000\007\000\009\000\000\000\
\000\000\044\000\046\000\049\000\000\000\000\000\063\000\074\000\
\000\000\000\000\000\000\134\000\137\000\140\000\067\000\078\000\
\163\000\000\000\000\000\000\000\000\000\000\000\000\000\066\000\
\077\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\
\123\000\000\000\081\000\119\000\125\000\000\000\000\000\153\000\
\000\000\001\000\000\000\003\000\000\000\000\000\000\000\016\000\
\004\000\000\000\000\000\000\000\005\000\000\000\025\000\000\000\
\020\000\006\000\000\000\040\000\000\000\052\000\045\000\055\000\
\000\000\042\000\058\000\047\000\061\000\157\000\143\000\149\000\
\000\000\086\000\000\000\142\000\130\000\136\000\132\000\138\000\
\000\000\092\000\105\000\096\000\109\000\000\000\095\000\108\000\
\000\000\084\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\088\000\101\000\090\000\103\000\121\000\
\127\000\000\000\129\000\118\000\124\000\000\000\147\000\154\000\
\000\000\000\000\017\000\012\000\014\000\015\000\026\000\021\000\
\023\000\024\000\019\000\050\000\053\000\056\000\059\000\000\000\
\000\000\000\000\115\000\000\000\113\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\062\000\073\000\145\000\151\000\000\000\065\000\
\076\000\000\000\000\000\064\000\075\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\122\000\128\000\000\000\094\000\
\107\000\093\000\106\000\000\000\135\000\000\000\000\000\000\000\
\000\000\000\000\000\000"

let yydgoto = "\002\000\
\024\000\025\000\026\000\076\000\027\000\028\000\085\000\029\000\
\030\000\031\000\088\000\089\000\136\000\032\000\092\000\033\000\
\098\000\034\000\095\000\035\000\100\000\036\000\047\000\048\000\
\067\000\068\000\069\000\060\000"

let yysindex = "\006\000\
\001\000\000\000\253\254\000\000\000\000\000\000\000\000\000\000\
\191\003\218\003\000\000\006\255\000\000\121\004\148\002\000\000\
\036\003\000\000\000\000\000\000\228\255\000\000\018\255\000\000\
\027\000\123\002\148\002\171\003\148\002\000\000\000\000\022\001\
\219\004\000\000\000\000\000\000\191\002\036\003\000\000\000\000\
\036\003\022\001\219\004\000\000\000\000\000\000\000\000\000\000\
\000\000\026\255\191\003\218\003\142\004\036\003\169\002\000\000\
\000\000\022\001\219\004\075\003\000\000\036\003\036\003\019\255\
\000\000\017\255\000\000\000\000\000\000\191\002\024\255\000\000\
\030\255\000\000\148\002\000\000\148\002\171\003\148\002\000\000\
\000\000\148\002\148\002\171\003\000\000\148\002\000\000\123\002\
\000\000\000\000\253\254\000\000\219\004\000\000\000\000\000\000\
\022\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\034\255\000\000\036\255\000\000\000\000\000\000\000\000\000\000\
\036\003\000\000\000\000\000\000\000\000\036\003\000\000\000\000\
\045\255\000\000\057\255\165\004\089\004\183\004\062\004\075\003\
\054\255\221\002\237\004\000\000\000\000\000\000\000\000\000\000\
\000\000\059\255\000\000\000\000\000\000\191\003\000\000\000\000\
\191\002\062\004\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\191\003\
\000\000\062\255\000\000\063\255\000\000\191\003\062\004\062\004\
\221\002\237\004\066\255\165\004\089\004\201\004\062\004\221\002\
\237\004\062\004\062\004\022\255\067\255\075\003\057\255\237\004\
\221\002\036\003\000\000\000\000\000\000\000\000\068\255\000\000\
\000\000\191\003\191\003\000\000\000\000\071\255\070\255\062\004\
\062\004\073\255\072\255\165\004\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\165\004\000\000\075\255\077\255\165\004\
\062\004\165\004\165\004"

let yyrindex = "\000\000\
\000\000\000\000\041\000\000\000\000\000\000\000\000\000\000\000\
\193\000\093\000\000\000\061\000\000\000\209\000\095\000\000\000\
\141\000\000\000\000\000\000\000\096\000\000\000\099\000\000\000\
\000\000\000\000\102\000\000\000\000\000\000\000\000\000\200\002\
\225\000\000\000\000\000\000\000\097\000\141\000\000\000\000\000\
\137\000\083\003\241\000\000\000\000\000\000\000\000\000\000\000\
\000\000\041\000\001\001\104\000\055\001\141\000\000\000\000\000\
\000\000\071\001\095\001\113\000\000\000\091\000\137\000\050\255\
\000\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\
\081\000\000\000\106\000\000\000\108\000\000\000\000\000\000\000\
\000\000\111\000\117\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\115\001\000\000\000\000\000\000\
\131\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\141\000\000\000\000\000\000\000\000\000\141\000\000\000\000\000\
\000\000\000\000\248\001\201\000\000\000\217\000\103\255\145\000\
\000\000\249\000\203\001\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\147\001\000\000\000\000\
\161\000\155\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\163\001\
\179\001\000\000\000\000\000\000\000\000\195\001\103\255\102\255\
\219\001\011\002\248\001\019\002\000\000\025\002\103\255\031\002\
\037\002\107\000\102\255\123\000\000\000\177\000\000\000\043\002\
\049\002\091\000\000\000\000\000\000\000\000\000\124\000\000\000\
\000\000\211\001\227\001\000\000\000\000\000\000\000\000\103\255\
\103\255\000\000\000\000\055\002\000\000\000\000\021\000\000\000\
\000\000\000\000\000\000\063\002\000\000\000\000\000\000\069\002\
\107\000\081\002\089\002"

let yygindex = "\000\000\
\000\000\121\000\072\003\037\000\240\255\038\000\192\255\166\000\
\252\255\224\001\245\255\004\000\241\255\193\003\229\255\039\004\
\219\255\042\000\222\255\255\255\242\255\089\003\204\255\075\000\
\248\255\196\255\064\000\232\004"

let yytablesize = 1535
let yytable = "\116\000\
\016\000\066\000\056\000\140\000\040\000\111\000\001\000\110\000\
\045\000\077\000\038\000\083\000\065\000\149\000\109\000\012\000\
\072\000\057\000\073\000\153\000\038\000\134\000\105\000\133\000\
\062\000\107\000\074\000\178\000\112\000\106\000\132\000\142\000\
\108\000\065\000\063\000\104\000\065\000\179\000\121\000\113\000\
\157\000\119\000\145\000\146\000\135\000\122\000\115\000\138\000\
\160\000\065\000\045\000\044\000\161\000\137\000\139\000\156\000\
\120\000\065\000\065\000\166\000\164\000\083\000\159\000\078\000\
\117\000\084\000\117\000\083\000\144\000\158\000\167\000\077\000\
\182\000\094\000\099\000\186\000\194\000\195\000\157\000\200\000\
\036\000\204\000\207\000\094\000\099\000\212\000\213\000\216\000\
\217\000\218\000\126\000\219\000\079\000\044\000\011\000\156\000\
\150\000\162\000\037\000\094\000\099\000\008\000\164\000\110\000\
\163\000\018\000\120\000\013\000\065\000\165\000\027\000\181\000\
\144\000\065\000\056\000\084\000\022\000\120\000\120\000\140\000\
\116\000\084\000\117\000\039\000\155\000\078\000\117\000\141\000\
\155\000\000\000\191\000\000\000\111\000\000\000\099\000\061\000\
\126\000\188\000\094\000\134\000\126\000\109\000\000\000\190\000\
\148\000\000\000\156\000\081\000\132\000\090\000\000\000\198\000\
\199\000\000\000\120\000\193\000\000\000\158\000\000\000\202\000\
\152\000\197\000\119\000\203\000\000\000\000\000\044\000\000\000\
\000\000\000\000\205\000\094\000\099\000\000\000\000\000\000\000\
\146\000\206\000\000\000\000\000\000\000\065\000\000\000\000\000\
\214\000\215\000\000\000\000\000\000\000\209\000\211\000\079\000\
\082\000\086\000\000\000\147\000\000\000\148\000\000\000\150\000\
\069\000\205\000\151\000\152\000\000\000\000\000\154\000\000\000\
\087\000\000\000\094\000\099\000\000\000\000\000\044\000\000\000\
\072\000\094\000\099\000\000\000\000\000\000\000\000\000\000\000\
\048\000\099\000\094\000\000\000\003\000\004\000\005\000\006\000\
\000\000\000\000\009\000\010\000\011\000\012\000\013\000\014\000\
\139\000\017\000\000\000\086\000\000\000\021\000\070\000\000\000\
\041\000\086\000\000\000\000\000\000\000\079\000\000\000\000\000\
\111\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\
\010\000\011\000\012\000\013\000\014\000\015\000\017\000\018\000\
\019\000\020\000\021\000\022\000\023\000\035\000\035\000\035\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\035\000\157\000\157\000\157\000\157\000\157\000\157\000\157\000\
\157\000\157\000\157\000\157\000\157\000\157\000\116\000\157\000\
\157\000\157\000\157\000\157\000\157\000\164\000\164\000\164\000\
\164\000\164\000\164\000\164\000\164\000\164\000\102\000\164\000\
\164\000\164\000\164\000\164\000\164\000\164\000\164\000\164\000\
\164\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
\034\000\034\000\034\000\034\000\034\000\034\000\104\000\034\000\
\034\000\034\000\034\000\034\000\034\000\144\000\144\000\144\000\
\144\000\120\000\144\000\120\000\144\000\144\000\144\000\144\000\
\144\000\144\000\054\000\144\000\144\000\144\000\144\000\144\000\
\144\000\120\000\144\000\120\000\144\000\144\000\144\000\144\000\
\144\000\144\000\060\000\144\000\144\000\148\000\148\000\148\000\
\148\000\117\000\148\000\117\000\148\000\148\000\148\000\148\000\
\148\000\148\000\080\000\148\000\148\000\148\000\148\000\148\000\
\148\000\120\000\148\000\120\000\148\000\148\000\148\000\148\000\
\148\000\148\000\085\000\148\000\148\000\146\000\146\000\146\000\
\146\000\120\000\146\000\000\000\146\000\146\000\146\000\146\000\
\146\000\146\000\141\000\146\000\146\000\146\000\146\000\146\000\
\146\000\000\000\146\000\000\000\146\000\146\000\146\000\146\000\
\146\000\146\000\083\000\146\000\146\000\069\000\069\000\000\000\
\000\000\000\000\043\000\000\000\000\000\069\000\069\000\069\000\
\069\000\069\000\114\000\069\000\069\000\072\000\072\000\069\000\
\069\000\069\000\131\000\069\000\000\000\072\000\072\000\072\000\
\072\000\072\000\112\000\072\000\072\000\043\000\043\000\072\000\
\072\000\072\000\000\000\072\000\000\000\043\000\000\000\043\000\
\043\000\043\000\000\000\043\000\043\000\133\000\133\000\157\000\
\000\000\080\000\000\000\087\000\000\000\133\000\041\000\133\000\
\133\000\133\000\000\000\133\000\133\000\097\000\097\000\041\000\
\041\000\041\000\133\000\041\000\000\000\097\000\000\000\097\000\
\097\000\097\000\097\000\097\000\097\000\000\000\091\000\000\000\
\100\000\000\000\000\000\000\000\009\000\010\000\089\000\012\000\
\000\000\014\000\000\000\017\000\091\000\000\000\000\000\000\000\
\000\000\000\000\051\000\000\000\000\000\087\000\000\000\000\000\
\057\000\000\000\000\000\087\000\000\000\000\000\068\000\080\000\
\000\000\000\000\000\000\100\000\100\000\000\000\071\000\000\000\
\000\000\000\000\000\000\100\000\070\000\100\000\100\000\100\000\
\000\000\100\000\100\000\089\000\089\000\000\000\000\000\000\000\
\099\000\000\000\000\000\089\000\000\000\089\000\089\000\089\000\
\098\000\089\000\089\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\091\000\091\000\000\000\000\000\000\000\
\000\000\000\000\000\000\091\000\000\000\091\000\091\000\091\000\
\000\000\091\000\091\000\000\000\000\000\000\000\000\000\051\000\
\051\000\000\000\000\000\000\000\000\000\000\000\000\000\051\000\
\000\000\051\000\051\000\051\000\000\000\051\000\051\000\057\000\
\057\000\000\000\000\000\000\000\000\000\000\000\000\000\057\000\
\000\000\057\000\057\000\057\000\000\000\057\000\057\000\068\000\
\068\000\000\000\000\000\000\000\000\000\000\000\000\000\068\000\
\000\000\068\000\068\000\068\000\000\000\068\000\068\000\071\000\
\071\000\000\000\000\000\000\000\000\000\000\000\000\000\071\000\
\000\000\071\000\071\000\071\000\000\000\071\000\071\000\135\000\
\135\000\000\000\000\000\000\000\000\000\000\000\000\000\135\000\
\000\000\135\000\135\000\135\000\000\000\135\000\135\000\070\000\
\070\000\000\000\000\000\000\000\000\000\000\000\000\000\070\000\
\043\000\070\000\070\000\070\000\000\000\070\000\070\000\099\000\
\099\000\043\000\043\000\043\000\000\000\043\000\000\000\099\000\
\131\000\099\000\099\000\099\000\000\000\099\000\099\000\098\000\
\098\000\131\000\131\000\131\000\000\000\131\000\000\000\098\000\
\000\000\098\000\098\000\098\000\000\000\098\000\098\000\000\000\
\157\000\157\000\157\000\157\000\000\000\157\000\157\000\157\000\
\157\000\157\000\157\000\157\000\000\000\000\000\157\000\157\000\
\157\000\157\000\157\000\000\000\000\000\000\000\000\000\000\000\
\133\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\097\000\133\000\133\000\133\000\000\000\133\000\100\000\000\000\
\000\000\097\000\097\000\097\000\089\000\097\000\000\000\100\000\
\100\000\100\000\091\000\100\000\000\000\089\000\089\000\089\000\
\051\000\089\000\000\000\091\000\091\000\091\000\057\000\091\000\
\000\000\051\000\051\000\051\000\068\000\051\000\000\000\057\000\
\057\000\057\000\000\000\057\000\071\000\068\000\068\000\068\000\
\000\000\068\000\070\000\000\000\000\000\071\000\071\000\071\000\
\039\000\071\000\000\000\070\000\070\000\070\000\099\000\070\000\
\064\000\000\000\000\000\000\000\071\000\000\000\098\000\099\000\
\099\000\099\000\046\000\099\000\000\000\000\000\000\000\098\000\
\098\000\098\000\000\000\098\000\000\000\064\000\000\000\000\000\
\064\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\096\000\101\000\114\000\000\000\000\000\064\000\129\000\007\000\
\008\000\000\000\096\000\101\000\000\000\064\000\064\000\075\000\
\000\000\018\000\019\000\020\000\046\000\022\000\023\000\000\000\
\000\000\000\000\096\000\101\000\003\000\004\000\005\000\006\000\
\007\000\008\000\009\000\010\000\011\000\012\000\013\000\014\000\
\015\000\017\000\018\000\019\000\020\000\021\000\022\000\023\000\
\000\000\123\000\004\000\005\000\006\000\000\000\000\000\124\000\
\125\000\011\000\012\000\013\000\126\000\101\000\127\000\000\000\
\064\000\096\000\055\000\128\000\000\000\064\000\000\000\102\000\
\004\000\005\000\006\000\039\000\000\000\000\000\180\000\011\000\
\000\000\013\000\042\000\000\000\041\000\041\000\058\000\000\000\
\021\000\000\000\000\000\000\000\041\000\187\000\041\000\041\000\
\041\000\180\000\041\000\041\000\058\000\183\000\000\000\000\000\
\000\000\097\000\000\000\124\000\125\000\103\000\012\000\192\000\
\126\000\000\000\127\000\097\000\000\000\196\000\180\000\180\000\
\000\000\000\000\000\000\114\000\042\000\058\000\180\000\130\000\
\000\000\180\000\180\000\097\000\103\000\000\000\000\000\000\000\
\000\000\064\000\000\000\000\000\000\000\000\000\143\000\000\000\
\000\000\208\000\210\000\000\000\000\000\000\000\058\000\180\000\
\180\000\000\000\000\000\187\000\058\000\000\000\000\000\000\000\
\000\000\000\000\000\000\192\000\000\000\097\000\000\000\196\000\
\180\000\208\000\210\000\000\000\003\000\004\000\005\000\006\000\
\000\000\062\000\009\000\010\000\011\000\012\000\013\000\014\000\
\043\000\017\000\049\000\063\000\059\000\021\000\000\000\000\000\
\000\000\000\000\000\000\000\000\130\000\169\000\176\000\130\000\
\143\000\000\000\059\000\185\000\000\000\000\000\093\000\000\000\
\000\000\000\000\000\000\102\000\004\000\005\000\006\000\000\000\
\093\000\189\000\130\000\011\000\000\000\013\000\000\000\131\000\
\131\000\000\000\043\000\059\000\055\000\131\000\000\000\131\000\
\093\000\131\000\131\000\131\000\000\000\131\000\131\000\130\000\
\130\000\000\000\185\000\000\000\130\000\169\000\176\000\130\000\
\000\000\185\000\130\000\130\000\059\000\000\000\189\000\000\000\
\185\000\000\000\059\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\093\000\
\130\000\130\000\000\000\000\000\130\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\130\000\000\000\000\000\000\000\
\130\000\130\000\130\000\130\000\000\000\000\000\000\000\000\000\
\000\000\000\000\131\000\170\000\177\000\131\000\000\000\000\000\
\184\000\000\000\000\000\050\000\004\000\005\000\006\000\007\000\
\008\000\051\000\052\000\011\000\012\000\013\000\053\000\082\000\
\131\000\018\000\019\000\020\000\055\000\022\000\023\000\003\000\
\004\000\005\000\006\000\000\000\000\000\009\000\010\000\011\000\
\012\000\013\000\014\000\000\000\017\000\131\000\131\000\184\000\
\021\000\000\000\131\000\170\000\177\000\131\000\184\000\000\000\
\131\000\131\000\003\000\004\000\005\000\006\000\000\000\184\000\
\009\000\010\000\011\000\012\000\013\000\014\000\000\000\017\000\
\037\000\041\000\000\000\021\000\000\000\000\000\131\000\131\000\
\037\000\037\000\131\000\000\000\000\000\000\000\037\000\000\000\
\037\000\000\000\131\000\000\000\037\000\000\000\131\000\131\000\
\131\000\131\000\037\000\000\000\037\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\037\000\037\000\000\000\000\000\
\037\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\037\000\037\000\000\000\037\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\037\000\037\000\000\000\
\000\000\000\000\000\000\000\000\000\000\037\000\000\000\000\000\
\000\000\000\000\037\000\000\000\037\000\000\000\037\000\000\000\
\000\000\037\000\037\000\000\000\000\000\037\000\123\000\004\000\
\005\000\006\000\000\000\178\000\124\000\125\000\011\000\012\000\
\013\000\126\000\000\000\127\000\000\000\179\000\000\000\055\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\037\000\123\000\004\000\005\000\006\000\037\000\000\000\124\000\
\125\000\011\000\012\000\013\000\126\000\000\000\127\000\000\000\
\168\000\000\000\055\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\037\000\000\000\000\000\
\037\000\050\000\004\000\005\000\006\000\000\000\000\000\051\000\
\052\000\011\000\012\000\013\000\053\000\000\000\054\000\037\000\
\000\000\000\000\055\000\000\000\000\000\037\000\050\000\004\000\
\005\000\006\000\000\000\000\000\051\000\052\000\011\000\012\000\
\013\000\053\000\000\000\118\000\000\000\000\000\000\000\055\000\
\000\000\037\000\000\000\000\000\000\000\123\000\004\000\005\000\
\006\000\037\000\037\000\124\000\125\000\011\000\012\000\013\000\
\126\000\000\000\127\000\000\000\000\000\000\000\055\000\171\000\
\004\000\005\000\006\000\000\000\000\000\172\000\173\000\011\000\
\012\000\013\000\174\000\000\000\175\000\000\000\000\000\000\000\
\055\000\171\000\004\000\005\000\006\000\000\000\000\000\172\000\
\173\000\011\000\012\000\013\000\174\000\000\000\201\000\000\000\
\000\000\000\000\055\000\003\000\004\000\005\000\006\000\000\000\
\000\000\009\000\010\000\011\000\000\000\013\000\014\000\000\000\
\017\000\000\000\000\000\000\000\055\000\123\000\004\000\005\000\
\006\000\000\000\000\000\124\000\125\000\011\000\000\000\013\000\
\126\000\000\000\127\000\000\000\000\000\000\000\055\000"

let yycheck = "\052\000\
\000\000\017\000\014\000\064\000\009\000\043\000\001\000\042\000\
\010\000\026\000\014\001\028\000\017\000\078\000\042\000\010\001\
\021\000\014\000\001\001\084\000\000\000\059\000\038\000\058\000\
\006\001\041\000\000\000\006\001\043\000\038\000\058\000\015\001\
\041\000\038\000\016\001\037\000\041\000\016\001\054\000\014\001\
\000\000\053\000\019\001\014\001\059\000\054\000\051\000\063\000\
\015\001\054\000\052\000\010\000\017\001\062\000\063\000\093\000\
\053\000\062\000\063\000\015\001\000\000\078\000\097\000\026\000\
\015\001\028\000\017\001\084\000\070\000\097\000\014\001\088\000\
\019\001\032\000\033\000\017\001\015\001\015\001\093\000\014\001\
\000\000\015\001\015\001\042\000\043\000\015\001\017\001\015\001\
\017\001\015\001\000\000\015\001\000\000\052\000\000\000\000\000\
\000\000\113\000\000\000\058\000\059\000\000\000\118\000\000\000\
\113\000\000\000\000\000\000\000\113\000\118\000\000\000\127\000\
\000\000\118\000\126\000\078\000\000\000\015\001\017\001\180\000\
\173\000\084\000\000\000\000\000\088\000\088\000\052\000\064\000\
\000\000\255\255\146\000\255\255\170\000\255\255\093\000\015\000\
\000\000\142\000\097\000\177\000\000\000\169\000\255\255\145\000\
\000\000\255\255\184\000\027\000\176\000\029\000\255\255\167\000\
\168\000\255\255\000\000\160\000\255\255\185\000\255\255\175\000\
\000\000\166\000\174\000\179\000\255\255\255\255\125\000\255\255\
\255\255\255\255\186\000\130\000\131\000\255\255\255\255\255\255\
\000\000\186\000\255\255\255\255\255\255\186\000\255\255\255\255\
\200\000\201\000\255\255\255\255\255\255\194\000\195\000\026\000\
\000\000\028\000\255\255\075\000\255\255\077\000\255\255\079\000\
\000\000\217\000\082\000\083\000\255\255\255\255\086\000\255\255\
\000\000\255\255\169\000\170\000\255\255\255\255\173\000\255\255\
\000\000\176\000\177\000\255\255\255\255\255\255\255\255\255\255\
\000\000\184\000\185\000\255\255\001\001\002\001\003\001\004\001\
\255\255\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\000\000\014\001\255\255\078\000\255\255\018\001\019\001\255\255\
\000\000\084\000\255\255\255\255\255\255\088\000\255\255\255\255\
\000\000\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\000\000\015\001\
\016\001\017\001\018\001\019\001\020\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\000\000\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\000\000\015\001\
\016\001\017\001\018\001\019\001\020\001\005\001\006\001\007\001\
\008\001\015\001\010\001\017\001\012\001\013\001\014\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\007\001\
\008\001\015\001\010\001\017\001\012\001\013\001\014\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\007\001\
\008\001\015\001\010\001\017\001\012\001\013\001\014\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\007\001\
\008\001\017\001\010\001\015\001\012\001\013\001\014\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\007\001\
\008\001\015\001\010\001\255\255\012\001\013\001\014\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\007\001\
\008\001\255\255\010\001\255\255\012\001\013\001\014\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\255\255\
\255\255\255\255\000\000\255\255\255\255\013\001\006\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\015\001\
\016\001\017\001\000\000\019\001\255\255\013\001\006\001\015\001\
\016\001\017\001\000\000\019\001\020\001\005\001\006\001\015\001\
\016\001\017\001\255\255\019\001\255\255\013\001\255\255\015\001\
\016\001\017\001\255\255\019\001\020\001\005\001\006\001\000\000\
\255\255\026\000\255\255\028\000\255\255\013\001\006\001\015\001\
\016\001\017\001\255\255\019\001\020\001\005\001\006\001\015\001\
\016\001\017\001\000\000\019\001\255\255\013\001\255\255\015\001\
\016\001\017\001\000\000\019\001\020\001\255\255\001\001\255\255\
\000\000\255\255\255\255\255\255\007\001\008\001\000\000\010\001\
\255\255\012\001\255\255\014\001\000\000\255\255\255\255\255\255\
\255\255\255\255\000\000\255\255\255\255\078\000\255\255\255\255\
\000\000\255\255\255\255\084\000\255\255\255\255\000\000\088\000\
\255\255\255\255\255\255\005\001\006\001\255\255\000\000\255\255\
\255\255\255\255\255\255\013\001\000\000\015\001\016\001\017\001\
\255\255\019\001\020\001\005\001\006\001\255\255\255\255\255\255\
\000\000\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\000\000\019\001\020\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\015\001\016\001\017\001\
\255\255\019\001\020\001\255\255\255\255\255\255\255\255\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\006\001\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\015\001\016\001\017\001\255\255\019\001\255\255\013\001\
\006\001\015\001\016\001\017\001\255\255\019\001\020\001\005\001\
\006\001\015\001\016\001\017\001\255\255\019\001\255\255\013\001\
\255\255\015\001\016\001\017\001\255\255\019\001\020\001\255\255\
\001\001\002\001\003\001\004\001\255\255\006\001\007\001\008\001\
\009\001\010\001\011\001\012\001\255\255\255\255\015\001\016\001\
\017\001\018\001\019\001\255\255\255\255\255\255\255\255\255\255\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\006\001\015\001\016\001\017\001\255\255\019\001\006\001\255\255\
\255\255\015\001\016\001\017\001\006\001\019\001\255\255\015\001\
\016\001\017\001\006\001\019\001\255\255\015\001\016\001\017\001\
\006\001\019\001\255\255\015\001\016\001\017\001\006\001\019\001\
\255\255\015\001\016\001\017\001\006\001\019\001\255\255\015\001\
\016\001\017\001\255\255\019\001\006\001\015\001\016\001\017\001\
\255\255\019\001\006\001\255\255\255\255\015\001\016\001\017\001\
\009\000\019\001\255\255\015\001\016\001\017\001\006\001\019\001\
\017\000\255\255\255\255\255\255\021\000\255\255\006\001\015\001\
\016\001\017\001\010\000\019\001\255\255\255\255\255\255\015\001\
\016\001\017\001\255\255\019\001\255\255\038\000\255\255\255\255\
\041\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\032\000\033\000\051\000\255\255\255\255\054\000\055\000\005\001\
\006\001\255\255\042\000\043\000\255\255\062\000\063\000\013\001\
\255\255\015\001\016\001\017\001\052\000\019\001\020\001\255\255\
\255\255\255\255\058\000\059\000\001\001\002\001\003\001\004\001\
\005\001\006\001\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\001\001\002\001\003\001\004\001\255\255\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\093\000\014\001\255\255\
\113\000\097\000\018\001\019\001\255\255\118\000\255\255\001\001\
\002\001\003\001\004\001\124\000\255\255\255\255\127\000\009\001\
\255\255\011\001\010\000\255\255\005\001\006\001\014\000\255\255\
\018\001\255\255\255\255\255\255\013\001\142\000\015\001\016\001\
\017\001\146\000\019\001\020\001\028\000\001\001\255\255\255\255\
\255\255\033\000\255\255\007\001\008\001\037\000\010\001\160\000\
\012\001\255\255\014\001\043\000\255\255\166\000\167\000\168\000\
\255\255\255\255\255\255\172\000\052\000\053\000\175\000\055\000\
\255\255\178\000\179\000\059\000\060\000\255\255\255\255\255\255\
\255\255\186\000\255\255\255\255\255\255\255\255\070\000\255\255\
\255\255\194\000\195\000\255\255\255\255\255\255\078\000\200\000\
\201\000\255\255\255\255\204\000\084\000\255\255\255\255\255\255\
\255\255\255\255\255\255\212\000\255\255\093\000\255\255\216\000\
\217\000\218\000\219\000\255\255\001\001\002\001\003\001\004\001\
\255\255\006\001\007\001\008\001\009\001\010\001\011\001\012\001\
\010\000\014\001\012\000\016\001\014\000\018\001\255\255\255\255\
\255\255\255\255\255\255\255\255\124\000\125\000\126\000\127\000\
\128\000\255\255\028\000\131\000\255\255\255\255\032\000\255\255\
\255\255\255\255\255\255\001\001\002\001\003\001\004\001\255\255\
\042\000\145\000\146\000\009\001\255\255\011\001\255\255\005\001\
\006\001\255\255\052\000\053\000\018\001\055\000\255\255\013\001\
\058\000\015\001\016\001\017\001\255\255\019\001\020\001\167\000\
\168\000\255\255\170\000\255\255\172\000\173\000\174\000\175\000\
\255\255\177\000\178\000\179\000\078\000\255\255\182\000\255\255\
\184\000\255\255\084\000\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\097\000\
\200\000\201\000\255\255\255\255\204\000\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\212\000\255\255\255\255\255\255\
\216\000\217\000\218\000\219\000\255\255\255\255\255\255\255\255\
\255\255\255\255\124\000\125\000\126\000\127\000\255\255\255\255\
\130\000\255\255\255\255\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\008\001\009\001\010\001\011\001\012\001\013\001\
\146\000\015\001\016\001\017\001\018\001\019\001\020\001\001\001\
\002\001\003\001\004\001\255\255\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\255\255\014\001\167\000\168\000\169\000\
\018\001\255\255\172\000\173\000\174\000\175\000\176\000\255\255\
\178\000\179\000\001\001\002\001\003\001\004\001\255\255\185\000\
\007\001\008\001\009\001\010\001\011\001\012\001\255\255\014\001\
\001\000\016\001\255\255\018\001\255\255\255\255\200\000\201\000\
\009\000\010\000\204\000\255\255\255\255\255\255\015\000\255\255\
\017\000\255\255\212\000\255\255\021\000\255\255\216\000\217\000\
\218\000\219\000\027\000\255\255\029\000\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\037\000\038\000\255\255\255\255\
\041\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\051\000\052\000\255\255\054\000\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\062\000\063\000\255\255\
\255\255\255\255\255\255\255\255\255\255\070\000\255\255\255\255\
\255\255\255\255\075\000\255\255\077\000\255\255\079\000\255\255\
\255\255\082\000\083\000\255\255\255\255\086\000\001\001\002\001\
\003\001\004\001\255\255\006\001\007\001\008\001\009\001\010\001\
\011\001\012\001\255\255\014\001\255\255\016\001\255\255\018\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\113\000\001\001\002\001\003\001\004\001\118\000\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\255\255\014\001\255\255\
\016\001\255\255\018\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\142\000\255\255\255\255\
\145\000\001\001\002\001\003\001\004\001\255\255\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\255\255\014\001\160\000\
\255\255\255\255\018\001\255\255\255\255\166\000\001\001\002\001\
\003\001\004\001\255\255\255\255\007\001\008\001\009\001\010\001\
\011\001\012\001\255\255\014\001\255\255\255\255\255\255\018\001\
\255\255\186\000\255\255\255\255\255\255\001\001\002\001\003\001\
\004\001\194\000\195\000\007\001\008\001\009\001\010\001\011\001\
\012\001\255\255\014\001\255\255\255\255\255\255\018\001\001\001\
\002\001\003\001\004\001\255\255\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\255\255\014\001\255\255\255\255\255\255\
\018\001\001\001\002\001\003\001\004\001\255\255\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\255\255\014\001\255\255\
\255\255\255\255\018\001\001\001\002\001\003\001\004\001\255\255\
\255\255\007\001\008\001\009\001\255\255\011\001\012\001\255\255\
\014\001\255\255\255\255\255\255\018\001\001\001\002\001\003\001\
\004\001\255\255\255\255\007\001\008\001\009\001\255\255\011\001\
\012\001\255\255\014\001\255\255\255\255\255\255\018\001"

let yynames_const = "\
  EOF\000\
  "

let yynames_block = "\
  IDENT\000\
  CST_CHAR\000\
  CST_INT\000\
  CST_STRING\000\
  SEP\000\
  ESEP\000\
  OPERATOR\000\
  EQ\000\
  SYMOP\000\
  DEREFOP\000\
  TYPE\000\
  PRIM\000\
  INCLUDE\000\
  LPAREN\000\
  RPAREN\000\
  LBRACE\000\
  RBRACE\000\
  LBRACK\000\
  RBRACK\000\
  DEFINE\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'toplevel) in
    Obj.repr(
# 54 "cparser2.mly"
               (_1)
# 642 "cparser2.ml"
               : Ast0.code list))
; (fun __caml_parser_env ->
    Obj.repr(
# 55 "cparser2.mly"
      ([])
# 648 "cparser2.ml"
               : Ast0.code list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel2) in
    Obj.repr(
# 60 "cparser2.mly"
                                    (Ast0.EXPR(_1)::_2)
# 656 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sep) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 61 "cparser2.mly"
                                    (Ast0.SEP(_1)::_2)
# 664 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'definesym) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel3) in
    Obj.repr(
# 62 "cparser2.mly"
                                    (_1@_2)
# 672 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'define) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 63 "cparser2.mly"
                                    (_1@_2)
# 680 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 64 "cparser2.mly"
                                    ([Ast0.EXPR(_1)])
# 687 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sep) in
    Obj.repr(
# 65 "cparser2.mly"
                                    ([Ast0.SEP(_1)])
# 694 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'defineend) in
    Obj.repr(
# 66 "cparser2.mly"
                                    (_1)
# 701 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 67 "cparser2.mly"
                   (Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])::_2)
# 709 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 68 "cparser2.mly"
                   ([Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])])
# 716 "cparser2.ml"
               : 'toplevel))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sep) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 72 "cparser2.mly"
                                    (Ast0.SEP(_1)::_2)
# 724 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sep) in
    Obj.repr(
# 73 "cparser2.mly"
                                    ([Ast0.SEP(_1)])
# 731 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'definesym) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel3) in
    Obj.repr(
# 74 "cparser2.mly"
                                    (_1@_2)
# 739 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'define) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 75 "cparser2.mly"
                                    (_1@_2)
# 747 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'defineend) in
    Obj.repr(
# 76 "cparser2.mly"
                                    (_1)
# 754 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 77 "cparser2.mly"
                   (Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])::_2)
# 762 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 78 "cparser2.mly"
                   ([Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])])
# 769 "cparser2.ml"
               : 'ltoplevel2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressionsd) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel2) in
    Obj.repr(
# 82 "cparser2.mly"
                                    (Ast0.EXPR(_1)::_2)
# 777 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsdend) in
    Obj.repr(
# 83 "cparser2.mly"
                                    ([Ast0.EXPR(_1)])
# 784 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sep) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 84 "cparser2.mly"
                                    (Ast0.SEP(_1)::_2)
# 792 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sep) in
    Obj.repr(
# 85 "cparser2.mly"
                                    ([Ast0.SEP(_1)])
# 799 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'definesym) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ltoplevel3) in
    Obj.repr(
# 86 "cparser2.mly"
                                    (_1@_2)
# 807 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'define) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 87 "cparser2.mly"
                                    (_1@_2)
# 815 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'defineend) in
    Obj.repr(
# 88 "cparser2.mly"
                                    (_1)
# 822 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'toplevel) in
    Obj.repr(
# 89 "cparser2.mly"
                   (Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])::_2)
# 830 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 90 "cparser2.mly"
                   ([Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])])
# 837 "cparser2.ml"
               : 'ltoplevel3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 93 "cparser2.mly"
                                    (mkinfo _1)
# 844 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 94 "cparser2.mly"
                                    ("{",mkbinfo _1)
# 851 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 95 "cparser2.mly"
                                    ("}",mkbinfo _1)
# 858 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 96 "cparser2.mly"
                                    (mkinfo _1)
# 865 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 97 "cparser2.mly"
                                    (")",mkbinfo _1)
# 872 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 98 "cparser2.mly"
                                    ("]",mkbinfo _1)
# 879 "cparser2.ml"
               : 'sep))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 103 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)])])])
# 888 "cparser2.ml"
               : 'definesym))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 108 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)]);
		   Ast0.PAREN(_4,Ast.KNOWN)])])
# 901 "cparser2.ml"
               : 'define))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 114 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)])])])
# 910 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 117 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1)])
# 917 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 119 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)]);
		   Ast0.PAREN(_4,Ast.KNOWN)])])
# 930 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'args) in
    Obj.repr(
# 123 "cparser2.mly"
    ([Ast0.SEP("#define",mkbinfo _1);
       Ast0.EXPR([Ast0.SYMBOL([Ast0.IDENT(mkinfo _2)]);
		   Ast0.PAREN(_4,Ast.ENDUNKNOWN)])])
# 942 "cparser2.ml"
               : 'defineend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 130 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 950 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 131 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 957 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 132 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 965 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 133 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 972 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 134 "cparser2.mly"
                                    (_1)
# 979 "cparser2.ml"
               : 'expressions))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 137 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 987 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 138 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 994 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 139 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1002 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 140 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1009 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 141 "cparser2.mly"
                                    (_1)
# 1016 "cparser2.ml"
               : 'expressionsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 145 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1024 "cparser2.ml"
               : 'expressions2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 146 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1031 "cparser2.ml"
               : 'expressions2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 147 "cparser2.mly"
                                    (_1)
# 1038 "cparser2.ml"
               : 'expressions2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 150 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1046 "cparser2.ml"
               : 'expressions2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 151 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1053 "cparser2.ml"
               : 'expressions2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 152 "cparser2.mly"
                                    (_1)
# 1060 "cparser2.ml"
               : 'expressions2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 156 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1068 "cparser2.ml"
               : 'expressions3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 157 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1075 "cparser2.ml"
               : 'expressions3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 158 "cparser2.mly"
                                    (_1)
# 1082 "cparser2.ml"
               : 'expressions3))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 161 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1090 "cparser2.ml"
               : 'expressions3end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 162 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1097 "cparser2.ml"
               : 'expressions3end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 163 "cparser2.mly"
                                    (_1)
# 1104 "cparser2.ml"
               : 'expressions3end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 167 "cparser2.mly"
                                    (Ast0.PAREN(_2,Ast.KNOWN)::_4)
# 1114 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 168 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1122 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 169 "cparser2.mly"
                                      ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1133 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 170 "cparser2.mly"
                                       ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1144 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsd) in
    Obj.repr(
# 171 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1152 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhs) in
    Obj.repr(
# 172 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1160 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 173 "cparser2.mly"
                                    ([Ast0.PAREN(_2,Ast.KNOWN)])
# 1169 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 174 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1176 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 175 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1186 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 176 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1196 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 177 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1203 "cparser2.ml"
               : 'expressions4))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 180 "cparser2.mly"
                                    (Ast0.PAREN(_2,Ast.KNOWN)::_4)
# 1213 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 181 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1221 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 182 "cparser2.mly"
                                         ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1232 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 183 "cparser2.mly"
                                          ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1243 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsdend) in
    Obj.repr(
# 184 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1251 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhsend) in
    Obj.repr(
# 185 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1259 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 186 "cparser2.mly"
                                   ([Ast0.ASSIGN(mkinfo _1,[],Ast.ENDUNKNOWN)])
# 1266 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 187 "cparser2.mly"
                                    ([Ast0.PAREN(_2,Ast.KNOWN)])
# 1275 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 188 "cparser2.mly"
                                    ([Ast0.PAREN(_2,Ast.ENDUNKNOWN)])
# 1283 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 189 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1290 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 190 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1300 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 191 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.ENDUNKNOWN])
# 1309 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 192 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1319 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 193 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.ENDUNKNOWN])
# 1328 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 194 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1335 "cparser2.ml"
               : 'expressions4end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 198 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1343 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 199 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1350 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 200 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1358 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 201 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1365 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 202 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1373 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 203 "cparser2.mly"
                                      ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1384 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 204 "cparser2.mly"
                                       ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1395 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsd) in
    Obj.repr(
# 205 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1403 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhs) in
    Obj.repr(
# 206 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1411 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 207 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1418 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 208 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1428 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 209 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1438 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 210 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1445 "cparser2.ml"
               : 'expressionsd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 213 "cparser2.mly"
                                    (Ast0.SYMBOL(_1)::_2)
# 1453 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 214 "cparser2.mly"
                                    ([Ast0.SYMBOL(_1)])
# 1460 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 215 "cparser2.mly"
                                    (Ast0.DSYMBOL(_1)::_2)
# 1468 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 216 "cparser2.mly"
                                    ([Ast0.DSYMBOL(_1)])
# 1475 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 217 "cparser2.mly"
                                    (Ast0.EOP(mkinfo _1)::_2)
# 1483 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 218 "cparser2.mly"
                                         ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1494 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 219 "cparser2.mly"
                                          ((mkcall _1 _3 Ast.KNOWN)::_5)
# 1505 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsdend) in
    Obj.repr(
# 220 "cparser2.mly"
                                    (Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])::_2)
# 1513 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'assignrhsend) in
    Obj.repr(
# 221 "cparser2.mly"
                                    ([Ast0.ASSIGN(mkinfo _1,_2,Ast.KNOWN)])
# 1521 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 222 "cparser2.mly"
                                   ([Ast0.ASSIGN(mkinfo _1,[],Ast.ENDUNKNOWN)])
# 1528 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 223 "cparser2.mly"
                                    ([Ast0.EOP(mkinfo _1)])
# 1535 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 224 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1545 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 225 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.ENDUNKNOWN])
# 1554 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 226 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.KNOWN])
# 1564 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 227 "cparser2.mly"
                                    ([mkcall _1 _3 Ast.ENDUNKNOWN])
# 1573 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 228 "cparser2.mly"
                                    ([Ast0.SYMBOL([Ast0.IDENT(mkinfo _1)])])
# 1580 "cparser2.ml"
               : 'expressionsdend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions) in
    Obj.repr(
# 231 "cparser2.mly"
                                ([Ast0.EXPR(_1)])
# 1587 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'args2) in
    Obj.repr(
# 232 "cparser2.mly"
                                (Ast0.EXPR(_1)::_2)
# 1595 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'args2) in
    Obj.repr(
# 233 "cparser2.mly"
                                (_1)
# 1602 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    Obj.repr(
# 234 "cparser2.mly"
                                ([])
# 1608 "cparser2.ml"
               : 'args))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'args) in
    Obj.repr(
# 237 "cparser2.mly"
                                (Ast0.SEP(mkinfo _1)::_2)
# 1616 "cparser2.ml"
               : 'args2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'args) in
    Obj.repr(
# 238 "cparser2.mly"
                                (Ast0.EXPR([Ast0.STRUCT(_2,Ast.KNOWN)])::_4)
# 1626 "cparser2.ml"
               : 'args2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 241 "cparser2.mly"
                                ([Ast0.EXPR(_1)])
# 1633 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'args2end) in
    Obj.repr(
# 242 "cparser2.mly"
                                (Ast0.EXPR(_1)::_2)
# 1641 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'args2end) in
    Obj.repr(
# 243 "cparser2.mly"
                                (_1)
# 1648 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    Obj.repr(
# 244 "cparser2.mly"
                                ([])
# 1654 "cparser2.ml"
               : 'argsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 247 "cparser2.mly"
                                (Ast0.SEP(mkinfo _1)::_2)
# 1662 "cparser2.ml"
               : 'args2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 248 "cparser2.mly"
                                (Ast0.EXPR([Ast0.STRUCT(_2,Ast.KNOWN)])::_4)
# 1672 "cparser2.ml"
               : 'args2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 249 "cparser2.mly"
                                ([Ast0.EXPR([Ast0.STRUCT(_2,Ast.ENDUNKNOWN)])])
# 1680 "cparser2.ml"
               : 'args2end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2) in
    Obj.repr(
# 253 "cparser2.mly"
                                (Ast0.SYMBOL(_1)::_2)
# 1688 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 254 "cparser2.mly"
                                ([Ast0.SYMBOL(_1)])
# 1695 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3) in
    Obj.repr(
# 255 "cparser2.mly"
                                (Ast0.DSYMBOL(_1)::_2)
# 1703 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 256 "cparser2.mly"
                                ([Ast0.DSYMBOL(_1)])
# 1710 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4) in
    Obj.repr(
# 257 "cparser2.mly"
                                (_1)
# 1717 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 258 "cparser2.mly"
                                ([Ast0.STRUCT(_2,Ast.KNOWN)])
# 1726 "cparser2.ml"
               : 'assignrhs))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions2end) in
    Obj.repr(
# 261 "cparser2.mly"
                                (Ast0.SYMBOL(_1)::_2)
# 1734 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 262 "cparser2.mly"
                                ([Ast0.SYMBOL(_1)])
# 1741 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'dsymbol) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressions3end) in
    Obj.repr(
# 263 "cparser2.mly"
                                (Ast0.DSYMBOL(_1)::_2)
# 1749 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 264 "cparser2.mly"
                                ([Ast0.DSYMBOL(_1)])
# 1756 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expressions4end) in
    Obj.repr(
# 265 "cparser2.mly"
                                (_1)
# 1763 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'args) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 266 "cparser2.mly"
                                ([Ast0.STRUCT(_2,Ast.KNOWN)])
# 1772 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'argsend) in
    Obj.repr(
# 267 "cparser2.mly"
                                ([Ast0.STRUCT(_2,Ast.ENDUNKNOWN)])
# 1780 "cparser2.ml"
               : 'assignrhsend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'atoken) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 271 "cparser2.mly"
                                      (_1::_2)
# 1788 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'atoken) in
    Obj.repr(
# 272 "cparser2.mly"
                                      ([_1])
# 1795 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 273 "cparser2.mly"
                                      (Ast0.ARRAY(_2,Ast.KNOWN)::_4)
# 1805 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 274 "cparser2.mly"
                                      ([Ast0.ARRAY(_2,Ast.KNOWN)])
# 1814 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
    Obj.repr(
# 275 "cparser2.mly"
                                      (Ast0.ARRAY([],Ast.KNOWN)::_3)
# 1823 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 276 "cparser2.mly"
                                      ([Ast0.ARRAY([],Ast.KNOWN)])
# 1831 "cparser2.ml"
               : 'symbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'atoken) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 279 "cparser2.mly"
                                      (_1::_2)
# 1839 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'atoken) in
    Obj.repr(
# 280 "cparser2.mly"
                                      ([_1])
# 1846 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 281 "cparser2.mly"
                                      (Ast0.ARRAY(_2,Ast.KNOWN)::_4)
# 1856 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expressions) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 282 "cparser2.mly"
                                      ([Ast0.ARRAY(_2,Ast.KNOWN)])
# 1865 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expressionsend) in
    Obj.repr(
# 283 "cparser2.mly"
                                      ([Ast0.ARRAY(_2,Ast.ENDUNKNOWN)])
# 1873 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'symbolend) in
    Obj.repr(
# 284 "cparser2.mly"
                                      (Ast0.ARRAY([],Ast.KNOWN)::_3)
# 1882 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int * Parse_error.linetype * Parse_error.atfront) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 285 "cparser2.mly"
                                      ([Ast0.ARRAY([],Ast.KNOWN)])
# 1890 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * Parse_error.linetype * Parse_error.atfront) in
    Obj.repr(
# 286 "cparser2.mly"
                                      ([Ast0.ARRAY([],Ast.ENDUNKNOWN)])
# 1897 "cparser2.ml"
               : 'symbolend))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 289 "cparser2.mly"
                                      (Ast0.IDENT(mkinfo _1))
# 1904 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 290 "cparser2.mly"
                                      (Ast0.CHAR(mkinfo _1))
# 1911 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 291 "cparser2.mly"
                                      (Ast0.INT(mkinfo _1))
# 1918 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 292 "cparser2.mly"
                                      (Ast0.STR(mkinfo _1))
# 1925 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 293 "cparser2.mly"
                                      (Ast0.SYMOP(mkinfo _1))
# 1932 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 294 "cparser2.mly"
                                      (Ast0.TYPE(mkinfo _1))
# 1939 "cparser2.ml"
               : 'atoken))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'dsymbol) in
    Obj.repr(
# 297 "cparser2.mly"
                                      (Ast0.DEREFOP(mkinfo _1)::_2)
# 1947 "cparser2.ml"
               : 'dsymbol))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string * (int * Parse_error.linetype * Parse_error.atfront)) in
    Obj.repr(
# 298 "cparser2.mly"
                                      ([Ast0.DEREFOP(mkinfo _1)])
# 1954 "cparser2.ml"
               : 'dsymbol))
(* Entry interpret *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let interpret (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Ast0.code list)
